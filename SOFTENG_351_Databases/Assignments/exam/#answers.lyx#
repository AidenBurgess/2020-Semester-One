#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
% Variables to change every new document
\newcommand{\hmwkClass}{SOFTENG 351} % Course/class
\newcommand{\hmwkNumber}{} % Assignment number

% Constants to set once
\newcommand{\hmwkAuthorName}{Aiden Burgess} % Your name
\newcommand{\hmwkUserID}{abur970} % User ID
\newcommand{\hmwkStudentNumber}{600280511} % Student number

% Packages
\usepackage{fancyhdr} % Required for custom headers
\usepackage{lastpage} % Required to determine the last page for the footer
\usepackage{extramarks} % Required for headers and footers

% Margins
\topmargin=-0.45in
\evensidemargin=0in
\oddsidemargin=0in
\textwidth=6.5in
\textheight=9.0in
\headsep=0.25in

% General document properties
\linespread{1.1} % Line spacing
\setlength\parindent{0pt} % Removes all indentation from paragraphs

% Required to not count titlepage in page numbering
\addtocounter {page} {-1}

% Make a simple command for use in document body
\newcommand{\start}{
\maketitle
\thispagestyle{empty}
\newpage
}

% Set up the header and footer
\pagestyle{fancy}
\lhead{\hmwkAuthorName} % Top left header
\rhead{\hmwkClass: Exam}
\lfoot{\lastxmark} % Bottom left footer
\cfoot{} % Bottom center footer
\rfoot{Page\ \thepage\ of\ \protect\pageref{LastPage}} % Bottom right footer
\renewcommand\headrulewidth{0.4pt} % Size of the header rule
\renewcommand\footrulewidth{0.4pt} % Size of the footer rule

% The following 2 commands setup the title page
\title{
\vspace{2in}
\textmd{\textbf{\hmwkClass:\ Exam \hmwkNumber}}\\
\normalsize\vspace{0.1in}\small{ \today }\\
\vspace{3in}
}

\author{
  \textbf{\hmwkAuthorName} \\
  \texttt{\hmwkUserID \hspace{0.1in}- \hmwkStudentNumber}
}

% Do not display standard date since we use a custom date
\date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
start
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Question 1
\end_layout

\begin_layout Section*
\begin_inset Graphics
	filename pasted1.png

\end_inset


\end_layout

\begin_layout Section*
Question 2
\end_layout

\begin_layout Subsection*
a)
\end_layout

\begin_layout Subsubsection*
i.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

ALTER TABLE COURSE ALTER Department SET DEFAULT 'CS';
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
ii.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

ALTER TABLE STUDENT ADD COLUMN Birth_Date DATE;
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
iii.
 can test this
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

UPDATE GRADE_REPORT
\end_layout

\begin_layout Plain Layout

SET Grade='B'
\end_layout

\begin_layout Plain Layout

WHERE Student_number='17' AND Section_identifier='119';
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
iv.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

SELECT Course_name, Course_number, Credit_hours, Semester, Year, Grade
\end_layout

\begin_layout Plain Layout

FROM GRADE_REPORT NATURAL JOIN SECTION NATURAL JOIN COURSE
\end_layout

\begin_layout Plain Layout

WHERE Student_number='8'
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
b)
\end_layout

\begin_layout Subsubsection*
i.
\end_layout

\begin_layout Standard
\begin_inset Formula $ANDERSON\_SECTIONS\leftarrow\sigma_{Instructor='Anderson'}(SECTION)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $NUM\_STUDENTS\leftarrow{}_{Section\_identifier}\Im_{COUNT\,Student\_number}(GRADE\_REPORT*ANDERSON\_SECTIONS)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $COURSE\_INFO\leftarrow\pi_{Course\_name,\,Course\_number,\,Semester,\,Year}(COURSE*ANDERSON\_SECTIONS)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $RESULT\leftarrow COURSE\_INFO*NUM\_STUDENTS$
\end_inset


\end_layout

\begin_layout Subsubsection*
ii.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted2.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ALL\_COURSES\leftarrow\pi_{Course\_number}(\sigma_{Year='08'}(SECTION))$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $STUDENT\_COURSES\leftarrow\sigma_{Year='08'}(STUDENT*GRADE\_REPORT)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\end_layout

\begin_layout Standard
base it on equal counts
\end_layout

\begin_layout Standard
Retrieve the names and major departments of the students who did not study
 all the courses that were offered in 2008.
\end_layout

\begin_layout Standard
SELECT Student_number
\end_layout

\begin_layout Standard
FROM GRADE_REPORT
\end_layout

\begin_layout Standard
WHERE NOT EXISTS(( SELECT Course_number 
\end_layout

\begin_layout Standard
FROM SECTION
\end_layout

\begin_layout Standard
WHERE Year=
\begin_inset Quotes erd
\end_inset

08
\begin_inset Quotes erd
\end_inset

) 
\end_layout

\begin_layout Standard
EXCEPT (SELECT Course
\end_layout

\begin_layout Section*
Question 3
\end_layout

\begin_layout Subsection*
a)
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted3.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted4.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted5.png

\end_inset


\end_layout

\begin_layout Subsection*
b) need to do, seems ok
\end_layout

\begin_layout Subsubsection*
i.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted7.png

\end_inset


\end_layout

\begin_layout Standard
Each pass takes 
\begin_inset Formula $19\times2=38\,I/Os$
\end_inset


\end_layout

\begin_layout Standard
As there are three passes, the sorting takes 
\begin_inset Formula $38\times3=116\,I/Os$
\end_inset

 in total.
\end_layout

\begin_layout Subsubsection*
ii.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted8.png

\end_inset


\end_layout

\begin_layout Section*
Question 4 - Seems tough
\end_layout

\begin_layout Section*
Question 5
\end_layout

\begin_layout Subsection*
a)
\end_layout

\begin_layout Standard
Insert locks using conservative (static) 2PL: A transaction T requests all
 the shared and exclusive locks needed by T immediately before the first
 operation of T while a lock of T is Question Sheet SOFTENG 351 7 of 7 released
 immediately after its final use by T.
 Explain why conservative (static) 2PL can prevent deadlock, i.e., eventually
 all transactions can complete.
\end_layout

\begin_layout Subsection*
b)
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted6.png

\end_inset


\end_layout

\begin_layout Standard
As there is a cycle in the graph, the schedule is not conflict-serializable.
\end_layout

\begin_layout Subsection*
c)
\end_layout

\begin_layout Subsubsection*
i.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename pasted9.png

\end_inset


\end_layout

\begin_layout Standard
There is a deadlock as a cycle exists between 
\begin_inset Formula $T_{1}$
\end_inset

 and 
\begin_inset Formula $T_{2}$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
ii.
\end_layout

\begin_layout Standard
\begin_inset Formula $T_{1}$
\end_inset

 is waiting on 
\begin_inset Formula $T_{2}$
\end_inset

 for the lock on B.
\end_layout

\begin_layout Standard
\begin_inset Formula $T_{2}$
\end_inset

 is waiting on 
\begin_inset Formula $T_{1}$
\end_inset

 for the lock on A.
\end_layout

\begin_layout Standard
As 
\begin_inset Formula $T_{2}$
\end_inset

 has a higher TS, 
\begin_inset Formula $T_{2}$
\end_inset

 is aborted, and subsequently the lock on A is released.
 Immediately, 
\begin_inset Formula $T_{1}$
\end_inset

 grabs the lock exclusive lock on B and 
\begin_inset Formula $T_{2}$
\end_inset

 is waiting for 
\begin_inset Formula $T_{1}$
\end_inset

 for the lock on A and B.
 This is accepted because 
\begin_inset Formula $TS(T_{1})<TS(T_{2})$
\end_inset

.
\end_layout

\begin_layout Standard
This allows 
\begin_inset Formula $T_{1}$
\end_inset

 to finish its transaction and commi
\end_layout

\begin_layout Section*
Question 6
\end_layout

\begin_layout Subsection*
1
\end_layout

\begin_layout Standard
As the transaction has been committed and is included in a checkpoint, no
 further instructions are needed.
 No action
\end_layout

\begin_layout Subsection*
2 should it be before+after the checkpoint?
\end_layout

\begin_layout Standard
Redo all write_item operations of 
\begin_inset Formula $T_{2}$
\end_inset

 from the log after the checkpoint, in the order in which they were written
 into the log, using the REDO procedure.
\end_layout

\begin_layout Subsection*
3
\end_layout

\begin_layout Standard
Undo all the write_item operations of 
\begin_inset Formula $T_{3}$
\end_inset

 using the UNDO procedure before and after the checkpoint.
 The operations should be undone in the reverse of the order in which they
 were written to the log.
\end_layout

\begin_layout Subsection*
4
\end_layout

\begin_layout Standard
Redo all write_item operations of 
\begin_inset Formula $T_{4}$
\end_inset

 from the log after the checkpoint, in the order in which they were written
 into the log, using the REDO procedure.
\end_layout

\begin_layout Subsection*
5
\end_layout

\begin_layout Standard
Undo all the write_item operations of 
\begin_inset Formula $T_{5}$
\end_inset

 using the UNDO procedure after the checkpoint.
 The operations should be undone in the reverse of the order in which they
 were written to the log.
\end_layout

\end_body
\end_document
